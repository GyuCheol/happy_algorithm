# 7월 14일

# 멀쩡한 사각형
# https://programmers.co.kr/learn/courses/30/lessons/62048
# lv2

# 수학적인 연산을 통해 규칙성을 찾아내야 하는 문제
# 규칙성을 아무리 고민해도 알아내기 어려워 다른 사람의 답안을 참고했다.

# 답안에서는 가로와 세로의 최대 공약수에따라 직선이 지나는 점의 위치가 결정된다고 말한다.
# 왜냐하면 사각형 정 가운데를 지나는 직선의 기울기를 y = h/w * x 라고 정의할 수 있다. (x, y 좌표 평면에 있다는 가정)
# 직선이 (0, 0)에서 (w, h)까지 도달해야하기 때문.
# 즉 h/w을 기약분수로 표현할 때 최대 공약수가 필요하고.
# 최대공약수가 없어 h/w가 약분할 수 없다면, 이 직선은 각 좌표마다 사각형을 2개씩 먹는다.
# 최대공약수가 있는 상태라면 해당 좌표마다 사각형을 1개씩만 먹는다.
# 즉, 최대 공약수가 전체 사각형 속에서 꼭지점에 맞닿는 좌표의 개수라고 생각할 수 있음.

# 예로, 사각형의 크기가 8, 12라면 최대 공약수인 4개 좌표마다 사각형의 꼭지점에 맞닿는다.
# 즉, 4개 좌표마다 사각형이 1개씩만 소모되고 다른 점에서는 2개씩 소모됨.
# 직선이 지나는 좌표마다 2개씩 소모하는 식은 w + h이다.
# 여기서 최대공약수 (직선이 꼭지점을 지나는 개수)를 빼주면 끝.

# 너무 수학적인 규칙 문제라 어려웠음 @.@

# 시간 복잡도 O(logN)

def solution(w,h):
    
    def gcd(a, b):
        if a % b == 0:
            return b
        else:
            return gcd(b, a % b)

    return (w * h) - (w + h - gcd(w, h))

print(solution(4, 8))
print(solution(8, 12))
